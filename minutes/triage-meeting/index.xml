<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Triage meeting on Rust Lang - Compiler Team</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/</link><description>Recent content in Triage meeting on Rust Lang - Compiler Team</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://rust-lang.github.io/compiler-team/minutes/triage-meeting/index.xml" rel="self" type="application/rss+xml"/><item><title>2019.04.11</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-04-11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-04-11/</guid><description>2019-04-11 Volunteers wanted seeking help on resolving &amp;ldquo;[firefox] error: relocation refers to local symbol &amp;ldquo;&amp;rdquo; [12], which is defined in a discarded section&amp;rdquo;
seeking help on resolving &amp;ldquo;Compiler panic with generic-typed nested closures&amp;rdquo;
Backport decisions No backport decisions were made at this meeting because there were no PRs nominated for backport. Working group sync wg-mir-opt The current goal is to make the MIR Place data structure non-recursive (Issue #52708).</description></item><item><title>2019.04.18</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-04-18/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-04-18/</guid><description>2019-04-18 Volunteers wanted No issues discussed this week. Backport decisions There were no beta backport nominations this week.
&amp;ldquo;Use informational target machine for metadata&amp;rdquo; (#58605) was nominated for backport to stable.
Nomination was declined Working group sync wg-llvm wg-llvm is working on optimizing overflow intrinsics with add and sub instructions.
A PR (#59546) has also been opened to fix a long standing unsoundness issue.</description></item><item><title>2019.04.25</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-04-25/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-04-25/</guid><description>2019-04-25 Volunteers wanted Somebody needed to reduce #60136 Somebody needed to write documentation #60059 Backport decisions &amp;ldquo;Temporarily accept [i|u][32|size] suffixes on a tuple index and warn&amp;rdquo; #60186
Accepted &amp;ldquo;Revert &amp;ldquo;compile crates under test w/ -Zemit-stack-sizes&amp;rdquo; #59911
Accepted Working group sync wg-rfc-2229 RFC 2229 is a proposal to change how closures capture variables. Instead of capturing the complete variable when a part of it is used (ie foo.</description></item><item><title>2019.05.02</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-05-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-05-02/</guid><description>2019-05-02 Volunteers wanted call for assistance: Does someone have an ARM (and maybe also MUSL?) host they could use to try to replicate &amp;ldquo;Stable rustc always panics on arm/musl&amp;rdquo; Backport decisions There were no beta- nor stable-nominations for backport. Working group sync wg-meta The compiler contributor RFC is in FCP and should be merged soon.
They are trying to get some sort of &amp;ldquo;design meeting&amp;rdquo; up and going.</description></item><item><title>2019.05.09</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-05-09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-05-09/</guid><description>2019-05-09 Volunteers wanted compiler panic &amp;ldquo;randomly&amp;rdquo; with incremental build (#60629)
Help is wanted to reproduce the issue Regression: Typemap type mismatch in 1.34.0+ (#60375)
Help is wanted to narrow down the problem Backport decisions save-analysis: Fix ICE when processing associated constant (#60649) Backport accepted Working group sync wg-nll NLL migration mode is enabled on Rust 2015.
The next goal is to remove the old AST-based borrow checker.</description></item><item><title>2019.05.16</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-05-16/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-05-16/</guid><description>2019-05-16 Volunteers wanted request for investigation: &amp;ldquo;Compiler panic with generic-typed nested closures&amp;rdquo; (#59494)
request for investigation: &amp;ldquo;Exponential compile-time and type_length_limit blowup when nesting closure wrappers&amp;rdquo; (#54540)
eddyb has excellent notes here on the fundamental problem request for investigation: &amp;ldquo;llvm lint: &amp;ldquo;Undefined behavior: Call argument type mismatches callee parameter type&amp;rdquo; with mixing debug and release&amp;rdquo; (#48310)
specifically, we need to resolve whether this is in fact an LLVM bug request for investigation: &amp;ldquo;ICE with unsized associated type&amp;rdquo; (#60431)</description></item><item><title>2019.05.23</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-05-23/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-05-23/</guid><description>2019-05-23 Volunteers wanted No issues discussed this week. Backport decisions &amp;ldquo;Fix ICE with inconsistent macro matchers&amp;rdquo; (#61046)
Backport accepted &amp;ldquo;debuginfo: Revert to old/more verbose behavior for -Cdebuginfo=1&amp;rdquo; (#61007)
Backport accepted Working group sync wg-pgo PGO stands for Profiler Guided Optimization.
Code is instrumented and then run. The profilng data gathered at runtime is then used in subsequent compilations to guide optimizations.</description></item><item><title>2019.06.06</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-06-06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-06-06/</guid><description>2019-06-06 Volunteers wanted No issues discussed this week. Backport decisions Fix regression 61475 #61500 Backport approved Turn turbo :fish: :ice_cream: into an error #61189 Backport approved Fix overflowing literal lint in loops #61098 Backport approved Fix more escaping ReScopes #60765 Backport approved Constrain all regions in the concrete type for an opaque type #60449 Backport approved Working group sync wg-mir-opt const propagation (by Wesley Wiser) on mir opt level 2</description></item><item><title>2019.06.13</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-06-13/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-06-13/</guid><description>2019-06-13 Volunteers wanted No issues discussed this week. Backport decisions Handle index out of bound errors during const eval without panic #61598 Approved for beta backport. Working group sync wg-llvm Nikita Popov fixed a codegen issue with LLVM float min/max intrinsics on X86.
This allowed varkor to switch our min/max functions to use those intrinsics.
Nikita Popov is working on getting CVP nowrap inference reenabled in LLVM.</description></item><item><title>2019.06.20</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-06-20/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-06-20/</guid><description>2019-06-20 Volunteers wanted No issues discussed this week. Backport decisions Beta: &amp;ldquo;resolve: Temporarily make panic available with no_implicit_prelude&amp;rdquo; #61971
Backport accepted Beta: &amp;ldquo;Fix ICE involving mut references&amp;rdquo; #61947
Backport accepted Beta: &amp;ldquo;rustc_typeck: correctly compute Substs for Res::SelfCtor.&amp;rdquo; #61896
Backport accepted Beta: &amp;ldquo;Fix rust-lldb wrapper scripts.&amp;rdquo; #61827
Backport declined Beta: &amp;ldquo;Fix cfg(test) build for x86_64-fortanix-unknown-sgx&amp;rdquo; #61503</description></item><item><title>2019.06.27</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-06-27/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-06-27/</guid><description>2019-06-27 The meeting largely consisted of discussion of a few nominated issues:
Rustdoc recursion limit issue
Assigned to @nagisa Incorrect span / broken rustfix: help: use dyn: dyn #[dom_struct]
@davidtwco is assigned and working on a fix. Soundness hole in pattern matching on enums with an uninhabited variant
Assigned to @eddyb. Self as default type isnt typechecked
Under discussion at a future T-Lang meeting.</description></item><item><title>2019.07.04</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-07-04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-07-04/</guid><description>2019-07-04 Volunteers wanted No issues discussed this week. Backport decisions There were no backport nominations this week. Working group sync wg-meta
Conferences, Mozilla All-Hands, and other activities have been keeping members of the group busy recently. So there&amp;rsquo;s been a slight stall in activity.
The compiler team website is nearly completed thanks to @Federico Carrone and @catalinasy!
Link to full discussion</description></item><item><title>2019.07.11</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-07-11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-07-11/</guid><description>2019-07-11 Volunteers wanted No issues discussed this week. Backport nominations Raise the default recursion limit to 128
Approved for beta backport Fix ICEs when Self is used in type aliases
Approved for beta backport Emit warning when trying to use PGO in conjunction with unwinding on Windows
On hold while @wesleywiser looks into alternative approaches Working group sync wg-pipelining</description></item><item><title>2019.07.18</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-07-18/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-07-18/</guid><description>2019-07-18 Volunteers wanted No issues discussed this week. Backport nominations Fix #62660
Approved for beta backport Declined for stable backport Cancel unemitted diagnostics during error recovery
Approved for beta backport Handle errors during error recovery gracefully
Approved for beta backport Correctly break out of recovery loop
Approved for beta backport Declined for stable backport Emit warning when trying to use PGO in conjunction with unwinding on Windows</description></item><item><title>2019.07.18</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-07-25/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-07-25/</guid><description>2019-07-25 Volunteers wanted #60297 - we are looking for someone with access to ARM/musl to help debug this
#62896 and #62932 - there are some embedded failures, quite possibly related to LLVM, that could use bisection
Backport nominations Make the parser TokenStream more resilient after mismatched delimiter recovery Approved for beta backport Working group sync No working group sync this week.</description></item><item><title>2019.08.01</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-08-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-08-01/</guid><description>2019-08-01 Volunteers wanted No issues discussed this week.
Backport decisions There were no pending backport decisions this week.
Working group sync No working group sync this week.</description></item><item><title>2019.08.15</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-08-15/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-08-15/</guid><description>2019-08-15 Volunteers wanted #60297 - we are looking for someone with access to ARM/musl to help debug this Backport nominations #63508 Do not ICE when synthesizing spans falling inside unicode chars Beta backport accepted Working group sync wg-learning wg-learning&amp;rsquo;s objective is to make the compiler easier to learn by ensuring that rustc-guide and api docs are &amp;ldquo;complete&amp;rdquo;.
Currently they&amp;rsquo;re working on:
Getting video lectures about parts of the compiler from people who know them Turning existing video lectures into content for the rustc-guide Triaging and working on issues and pull requests for learning content Help is always wanted!</description></item><item><title>2019.08.29</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-08-29/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-08-29/</guid><description>2019-08-29 Volunteers wanted We&amp;rsquo;ve had a few issues recently related to upgrading LLVM. We&amp;rsquo;d like to create a new working group which will focus on fixing ICEs and miscompilations caused by LLVM. Backport nominations Account for doc comments coming from proc macros without spans #63930
Accepted for beta backport fix nounwind attribute logic #63909
Declined for beta backport Fix nested eager expansions in arguments of format_args #63717</description></item><item><title>2019.09.05</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-09-05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-09-05/</guid><description>2019-09-05 Volunteers wanted Backport nominations Update xLTO compatibility table in rustc book #64092
Approved for beta backport Support &amp;ldquo;soft&amp;rdquo; feature-gating using a lint #64066
Approved for beta backport pprust: Do not print spaces before some tokens #63897
Approved for beta backport Working group sync No working group sync this week.</description></item><item><title>2019.09.12</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-09-12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-09-12/</guid><description>2019-09-12 Volunteers wanted We are looking for someone with access to an arm/musl system to help troubleshoot #60297 Backport nominations Update LLVM submodule #64317
Approved for beta backport fix nounwind attribute logic #63909
No conclusion reached yet. We&amp;rsquo;ll revisit next week. pprust: Do not print spaces before some tokens #63897
Approved for beta backport Working group sync wg-polonius After a long hiatus, this working group is being rebooted with a focus on expanding Polonius coverage to include initialization checking and region subtyping in addition to borrow checking.</description></item><item><title>2019.09.19</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-09-19/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-09-19/</guid><description>2019-09-19 Volunteers wanted &amp;ldquo;Better error message when attempting to instantiate tuple structs with private fields&amp;rdquo; #58017 Volunteer wanted to bisect this issue. Backport nominations &amp;ldquo;fn ptr is structural match&amp;rdquo; #64431
Accepted for beta backport &amp;ldquo;fix nounwind attribute logic&amp;rdquo; #63909
Declined for beta backport Working group sync wg-self-profile Three main things being worked on:
Getting the &amp;ldquo;minimum viable product&amp;rdquo; done as planned #58967</description></item><item><title>2019.09.26</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-09-26/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-09-26/</guid><description>2019-09-26 Volunteers wanted Help wanted: proc-macro param attrs dropping first attrs in impl fns #64682
Help wanted: error: internal compiler error: unexpected panic: inconsistent resolution for a macro #64803
Backport nominations Fix #64744. Account for the Zero sub-pattern case. #64748
Approved for beta backport Rustdoc render async function re-export #64599
Approved for beta backport Working group sync wg-traits wg-traits is spinning back up and has a number of projects currently being worked on:</description></item><item><title>2019.10.10</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-10-10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-10-10/</guid><description>2019-10-10 Announcements @centril is splitting libsyntax into data and logic parts which will decrease the amount of code librustc depends on.
@nagisa a cross-platform version of stacker which will allow us to avoid stack overflows in rustc.
There is a compiler team design meeting scheduled for tomorrow (2019-10-11) to discuss some of @Zoxc&amp;rsquo;s PRs.
@pnfelix is revising the code that handles structural match checking.
@nikomatsakis has a PR (#65232) up which helps us get closer to lazy normalization.</description></item><item><title>2019.10.17</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-10-17/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-10-17/</guid><description>2017-10-17 Announcements Design meeting on debuginfo strategy tomorrow (2019-10-18) on Zulip.
The traits working group had a design meeting yesterday on lazy normalization.
@nikomatsakis has been looking into lazy normalization specifically for constants and hopes to have some notes to share soon.
The LLVM ICE-breakers working group is nearly ready to go live.
@spastorino has nearly finished interning Place projections. PR 1, PR2
@centril is continuing to work on splitting libsyntax apart</description></item><item><title>2019.10.24</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-10-24/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-10-24/</guid><description>2019-10-24 Announcments @simulacrum landed the rustc-dev split PR which decreases the size of the rustc-dev rustup component #65474 Backport nominations Avoid ICE when adjusting bad self ty #65755
Accepted for beta and stable backport Avoid ICE when checking Destination of break inside a closure #65518
Accepted for beta and stable backport save-analysis: Nest tables when processing impl block definitions #65511
Accepted for beta backport save-analysis: Don&amp;rsquo;t ICE when resolving qualified type paths in struct members #65353</description></item><item><title>2019.10.31</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-10-31/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-10-31/</guid><description>2019-10-31 Announcments Rust 1.39 ships on Thursday!
Backport nominations &amp;ldquo;save-analysis: Account for async desugaring in async fn return types&amp;rdquo; #65936
Accepted for beta backport &amp;ldquo;resolve: Turn the &amp;ldquo;non-empty glob must import something&amp;rdquo; error into a lint&amp;rdquo; #65539
Accepted for beta backport Working group sync wg-pgo PGO is available in the stable compiler. Docs are in the rustc-guide and the rustc-book
Unfortunately we don&amp;rsquo;t observe significant performance gains from applying it (except for tiny synthetic test cases).</description></item><item><title>2019.11.07</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-11-07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-11-07/</guid><description>2019-11-07 Announcments @pnkfelix is moving to the US and will be working in the Eastern timezone.
@wesleywiser has been working on the constant propagation pass and wants to turn it on for debug &amp;amp; release builds to improve compilation time.
Rust 1.39 has shipped with async/await support and other goodies.
Backport nominations Do not ICE with a precision flag in formatting str and no format arguments #66093 Approved for beta &amp;amp; stable backport.</description></item><item><title>2019.11.14</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-11-14/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-11-14/</guid><description>2019-11-14 Announcements Request for assistance: &amp;ldquo;Rustc panics (NoSolution): could not prove Binder(projection soup)&amp;rdquo; #65581
Request for assistance: &amp;ldquo;Rust 1.38 regressions weren&amp;rsquo;t fully triaged&amp;rdquo; #65577
Request for assistance: &amp;ldquo;Miscompilation with target-cpu=znver1 (AMD Ryzen 1000&amp;frasl;2000 series) on Windows + LLVM 9.&amp;rdquo; #63959
@cjgillot replaced a lot of TypeFoldable impls with a derive #66384
The Infra team has finished evaluating GitHub Actions and we&amp;rsquo;re switching!
This will have a signficant, positive impact on CI build time.</description></item></channel></rss>